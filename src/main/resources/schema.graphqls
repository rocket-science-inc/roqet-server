schema {
  query: RootQuery
  mutation: RootMutation
}

# -- Entities --

type Event {
  id: ID!
  title: String!
  time: EventTimeOut!
  location: LocationOut!
  image: String!
}

type EventDetails {
  id: ID!
  title: String!
  time: EventTimeOut!
  location: LocationOut!
  image: String!
  organizer: ID!
  description: String!
  ticket_link: String!
  agenda: [AgendaPartOut]
}

type AgendaPartOut {
  username: String!
  company: String!
  description: String!
}

type Feed {
  count: Int
  page: Int
  next: Int
  records: [Event]
}

type LocationOut {
  streetAddress: String!
}

type EventTimeOut {
  start: Float!
  end: Float!
}

# -- !Entities --


# -- Inputs --

input LocationIn {
  streetAddress: String!
}

input EventTimeIn {
  start: Float!
  end: Float!
}

input AgendaPartIn {
  username: String!
  company: String!
  description: String!
}

# -- !Inputs --


# -- Queries --

type RootQuery {
  feed(count: Int!, page: Int!): Feed!
  event(id: Int!): EventDetails!
}

type RootMutation {
  createEvent(title: String!, organizer: Int!, image: String!, description: String!, ticket_link: String!,
  location: LocationIn!, time: EventTimeIn!, agenda: [AgendaPartIn!]!): EventDetails!
}
